[ 뷰JS 컴포넌트란? ]

1. 기능을 가진 UI모듈별 템플릿과 JS를 하나로 묶어서
다른 모듈과 분리하여 개발하거나 관리할 수 있게
하는 방법!

2. 컴포넌트는 설계도다!
- html요소의 설계도이며 이를 기반으로 실제
웹페이지에 생성한것을 인스턴스라고 부른다!

3. 컴포넌트는 재사용을 목적으로 한다!
- 하나를 수정하면 모든 부분이 수정되는 편리함이 있다
- 부분적으로 조금 다른 컴포넌트를 제작할 수 도 있다

4. 전역 컴포넌트 등록하기
->>> Vue.component()  메서드 사용!!!
((형식)): 
Vue.component(
사용자정의태그명,
{template : html구성요소})

(1) 사용자 정의 태그로 html 요소로 삽입한다!
-> 새로운 태그명을 지어서 컴포넌트가 들어갈
자리를 표시한다!

예) 
<div id="vapp">
<hi-ok></hi-ok>    
</div>

-> 사용자 정의 태그이름의 형식은 캐밥케이스로
만든다!(규칙이다!) : 단어중간에 데쉬를 사용한 이름!

(2) 컴포넌트 구성 요소는 반드시 Root가 하나여야함!
-> 하나의 태그로 쌀것!
예)
<div>
    <h1>제목</h1>
    <p>내용</p>
</div>

(3) 컴포넌트는 Vue객체 생성전 코딩해야 적용된다!

(4) 전역 컴포넌트 셋팅 메서드에서
템플릿 코드에 전달할 데이터는
반드시 리턴되는 익명함수형태로 사용한다!
-> 이렇게 써야하는 이유는
템플릿 데이터를 처음에 실행해줄때
함수의 리턴값으로 템플릿 코드로 변수를
전달해야만 사용할 수 있는 뷰JS
내부 구현구조를 가지고 있기때문이다!

((형식))
data:function(){
    return{변수:값,변수:값,...}
}

(5) 컴포넌트 옵션객체
1) template 옵션
- 실제화면에 나올 태그를 구성함
- 문자형으로 구성하며 뷰JS속성 사용가능함!
2) data 옵션
- 템플릿에서 사용할 데이터를 셋팅함
- 객체를 리턴하는 익명함수로 작성해야함!
- 주의: 화살표함수로 쓰지말것!
    (템플릿객체자신에게 리턴해야하므로!)
3) methods 옵션
- 템플릿에서 사용할 기능을 구현하는 메서드
4) 기타 : mounted 등 뷰인스턴스와 같은 옵션들


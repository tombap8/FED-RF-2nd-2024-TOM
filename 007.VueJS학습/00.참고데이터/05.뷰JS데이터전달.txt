[ 컴포넌트 데이터전달 / 이벤트호출 ]

1. 부모 / 자식 구분하기
1) 부모 : 뷰 인스턴스 및 html 뷰대상요소
-> 뷰대상요소 내부의 사용자정의태그
2) 자식 : 뷰 컴포넌트 인스턴스

2. 부모의 변수를 자식에게 전달하기
1) props down : 속성으로 전달하고 props로 받기
2) 구현방법 :
(1) 부모 사용자정의태그에 v-bind:내속성=값
    설정한 후...
    ((v-bind:내속성=값 에서 속성명 설정방법))
    ->>> v-bind로 속성을 만들때는 반드시 캐밥케이스로
    작성한다! 캐밥케이스란 (어쩌구-저쩌구) 데쉬를 넣고
    이름쓰는 방법임! (주의: 속성명은 대소문자를 구분하
    지 않으므로 캐믈케이스로 이름쓰지 않는다!)

(2) 자식 컴포넌트 인스턴스 옵션에
    props : [속성변수명,...]
    또는
    props : {속성명:데이터형,...}
    -> 배열로 값을 셋팅하면 데이터형무관
    -> 객체로 값을 셋팅하면 데이터형필터

    ->> 속성명변수는 props에서 속성명으로 읽어온
    캐밥케이스형을 캐믈케이스형으로 자동 변환되므로
    사용시 캐믈케이스로 사용한다!
    예) props: ['data-num'] ->>> this.dataNum

-> 부모 속성으로 v-bind한 것을 자식에게 props down하면
html 랜더링시 속성으로 html에 노출하지 않는다!

-> 주의: 부모로부터 받은 데이터변수는 값을 
        새로 할당하여 변경할 수 없다!


3. 자식 컴포넌트에서 부모의 이벤트 호출하기
+ 호출하는 자식 컴포넌트에서 값을 부모에게 전달가능!

1) $emit 으로 전달하고 (1~3)
on이벤트설정으로 받음 (4,5)

2) 구현방법:

(1) 자식 컴포넌트 템플릿에서 
    v-on:이벤트명=자식메서드 형태로 쓴후
    
(2) 자식 컴포넌트 메서드구역(methods)에
    이벤트에 쓴 자식메서드를 만들고

(3) this.$emit(부모가만든이벤트명) 으로 전달!
    ->>> this.$emit(부모이벤트명,전달값)
    ->> 만약 전달값이 여러개이면 배열/객체로 값을 전달함!

(4) 부모 태그에서 
    v-on:부모가만든이벤트명=부모메서드
    형태로 쓴후

(5) 부모의 뷰인스턴스 메서드구역(methods)에
    같은 이름의 메서드를 만들고 기능을 구현함!
    (이때 전달값이 있다면 전달변수를 써준다!)
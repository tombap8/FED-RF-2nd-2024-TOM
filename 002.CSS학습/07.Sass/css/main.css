@charset "UTF-8";
/* 주석2 */
/********************************************* 
    [ 사스 핵심 사용법 ]

    1. 사스 확장자별 파일구분
        (1) .scss - 사스관리파일
            (-> .sass 확장자는 중괄호,세미콜론 사용하지않는
            문법 사스파일임. 우리는 scss파일을 사용할 것임)
        (2) .css.map - 사스파일과 CSS연결정보 파일
        (3) .css - 실제로 적용되는 컴파일된 CSS

    2. 사스파일 컴파일하기
        ->Live Sass Compiler 확장프로그램 설치후
        하단 "Watch Sass" 클릭하여 작동시킴

        -> 에러가 없는한!!! 컴파일하여 같은 이름의
        css파일을 생성함 "Watching..."상태가됨.
        다시클릭시 실시간 변환상태가 꺼진다.

        -> 에러 발생시 컴파일이 안되고 cmd창에
        에러메시지가 나온다!

    3. 주요 문법
    (1) 네스팅 기법 
        - 선택자 중괄호안에 다른 하위선택을 하는것!
        예) div{h1{color:red;}}
        -> 장점: 같은 셋팅요소를 선택시 중복된
        선택자의 반복을 하지 않아도 된다!
        또한 같은 구성요소를 묶어서 셋팅 관리가능!

    (2) 속성접두어 묶음기법
        - 반복되는 같은 종류의 하위속성의 접두어를
        한번만 사용하여 셋팅을 묶어주는 방법
        예) font: {size:12px; weight:bold;}

    (3) 변수사용기법
        - 동일하게 사용할 값을 변수에 넣고 디자인을 배치함
        - 변수사용법-> $변수명: 값
        - 변수명은 모두 붙여쓰며 구분단어는
        캐믈케이스(camelCase) 또는 
        캐밥케이스(camel-case)를 사용한다
        - 변수의 범위는 변수를 선언후 하위로 상속되어 값이유지됨

    (4) 파일 분리기법 : @import
        - 부분파일을 분리하여 공통모듈로 합쳐서 사용한다!
        - 부분파일명은 사스에서 앞에 언더바를 붙여서 사용하는것이
        원칙이지만 언더바를 안써도 기본적으로 부분파일처리해줌!
        - 파일호출시 확장자 생략가능함! 
        (자동으로 앞에 언더바와 확장자를 생략해준다!)
        예) @import "reset";
        - 일반 CSS @import 와는 다른점은 http요청을 하지 않음

    (5) 믹스인 : 일종의 공통 CSS코드를 리턴하는 함수
        1) 셋팅형식

        [1] 전달변수가 없는 믹스인
        @mixin 믹스인이름 {CSS코드}

        [2] 전달변수가 있는 믹스인
        @mixin 믹스인이름(변수) {CSS코드}

        [3] 전달변수가 있고 기본값도 있는 믹스인
        @mixin 믹스인이름(변수:기본값) {CSS코드}

        2) 믹스인 호출방법 : 믹스인을 포함하라!(@include)
        -> @include 믹스인이름;
        -> @include 믹스인이름(전달값);

    (6) 네스팅 이어붙이기 기법(&)
        - 가상요소, 가상클래스, 특정클래스를
            현재 선택요소에 셋팅하는 방법임!
        - &(앰퍼센드)는 현재 선택요소 자신을 가리킴!

    (7) 반복코드 확장 : @extend (extend는 연장하다,확장하다)
        1) 사용이유 : 반복되는 같은 셋팅의 클래스를 쉽게 도입한다
        2) 사용방법 : 선택자 코드 안에 (@extend 클래스명) 형식
        3) 공통코드 외에 다른 셋팅속성은 하단에 추가로 구현한다!
        4) 장점 : 공통코드 적용을 위해 각 요소에 클래스를 일일히
        주지 않아도 공통코드를 적용할 수 있다!



*********************************************/
/* 기본 초기화 셋팅 */
/* 기본 초기화 */
html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
dt,
dd,
p,
figure,
figcaption {
  margin: 0;
  padding: 0;
}

/* ul,ol 순번,블릿없앰 */
ul, ol {
  list-style: none;
}

/* a요소 리셋 */
a {
  color: #222;
  text-decoration: none;
}

/* heading 요소 글자크기 */
h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  /* 박스 디자인시 글자크기로 인한
  영향을 없애기 위한 초기화! */
}

/* 이미지 초기화 */
img {
  /* 이미지 링크시 서버에서 볼때
  파란 테두리 없앰 */
  border: none;
  /* 박스에 이미지만 넣을때
  엔터간극 4px 하단공백 없애기  */
  vertical-align: middle;
}

.wrapper {
  max-width: 1000px;
  margin: 0 auto;
}

/* 상단영역 */
.top-area {
  color: #d10000;
  /* 서브 타이틀 박스 */
}
.top-area h1 {
  color: aqua;
  margin-bottom: 40px;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4666666667);
  background-color: #ff5656;
  background-image: url(../images/flower.png);
  background-size: 70px;
  background-position: center;
  background-repeat: repeat-x;
  padding: 20px;
}
.top-area h2 {
  font-size: 30px;
}

/* 메인영역 */
.main-area section {
  border-color: pink;
  border-style: dashed;
  border-width: 7px;
  margin-bottom: 20px;
  padding: 20px;
}
.main-area h3 {
  color: darkblue;
  margin-bottom: 40px;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4666666667);
}
.main-area ul,
.main-area ol,
.main-area p {
  line-height: 2;
  font-size: 24px;
}
.main-area ul li,
.main-area ol li,
.main-area p li {
  text-decoration: underline;
  text-underline-offset: 10px;
  text-decoration-thickness: 5px;
  text-decoration-color: #005ed1;
  text-align: center;
  background-color: #ff0;
  /* 가상요소 블릿넣기 */
}
.main-area ul li:first-child,
.main-area ol li:first-child,
.main-area p li:first-child {
  color: orchid;
  font-weight: bold;
  font-size: 30px;
  text-shadow: 1px 0 #000, -1px 0 #000, 0 1px #000, 0 -1px #000;
}
.main-area ul li::before,
.main-area ol li::before,
.main-area p li::before {
  content: "😋";
}

.button-basic, .button-report {
  display: inline-block;
  border: 1px solid #222;
  border-radius: 20px;
  padding: 15px 30px;
  font-size: 20px;
  cursor: pointer;
  margin-left: 20px;
}
.button-basic:hover, .button-report:hover {
  background-color: hotpink;
  text-decoration: overline;
  text-decoration-style: wavy;
}
.button-basic.my, .my.button-report {
  text-decoration: underline;
  text-decoration-style: dotted;
  text-underline-offset: 10px;
  text-decoration-thickness: 5px;
}

.button-report {
  background-color: orange;
  color: #fff;
}

.button-box {
  background-image: linear-gradient(to bottom, lightgreen, transparent);
}

.box-basic, .bottom-title, .top-area h2, .button-box {
  text-align: center;
  padding: 20px 0;
}

/* 하단 타이틀 */
.bottom-title {
  color: red;
  margin-bottom: 40px;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.4666666667);
}/*# sourceMappingURL=main.css.map */